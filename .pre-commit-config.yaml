# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
default_stages: [pre-commit, pre-push, pre-merge-commit]
default_language_version:
    python: python3
exclude: "cython"
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    # Find all available hooks in https://github.com/pre-commit/pre-commit-hooks/blob/main/README.md
    hooks:
    -   id: check-builtin-literals
    -   id: check-executables-have-shebangs
    -   id: check-merge-conflict
    -   id: check-yaml
    -   id: debug-statements
    -   id: detect-private-key
-   repo: https://github.com/pre-commit/mirrors-isort # Using isort mirror to prevent import error
    rev: v5.10.1
    hooks:
      - id: isort # Import sorting
        args: ["--profile", "black"] # black compatibility
-   repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black # Code formatting.
-   repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
    -   id: bandit # Security vulnerabilities
        args: ["--exclude", "scripts,setup.py,bin,tests,dat,cython",
               '--severity', 'medium'] # Severity above Medium considered (Low neglected)
# Using mypy installed in poetry environment as we did not get expected behaviours using github repo hook
- repo: local
  hooks:
      - id: mypy # Docstrings coverage
        name: mypy
        language: system
        entry: sh
        # Analysing grizzly_main package; skip checking import statements for modules that are missing
        # type annotations (to not fail due to external packages imported with missing annotations)
        args: [ "-c",
                "poetry run python3 -m mypy -p grizzly_main --ignore-missing-imports" ]
-   repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
    -   id: flake8 # Code linting -> Focuses on PEP 8 style and basic style issues
-   repo: https://github.com/PyCQA/pylint
    rev: pylint-2.7.2
    hooks:
    -   id: pylint # Code linting -> Deep code analysis for bugs, standards, and quality
# TODO - coverage not working! - commented temporarily
#-   repo: https://github.com/nedbat/coveragepy
#    rev: 7.3.0
#    hooks:
#    -   id: coverage  # Test coverage
#        args: ["--fail-under=80"]
# Using packages installed in poetry environments for hooks where we did not get expected behaviours using
# github repo hooks.
- repo: local
  hooks:
      - id: interrogate # Check docstrings coverage
        name: interrogate
        language: system
        entry: sh
        # 95% docstring coverage required, ignoring __init__.py modules and module-level docstrings
        # Note: use -vv for extended verbosity
        args: [ "-c",
            "poetry run python3 -m interrogate --fail-under 95 --ignore-init-module --ignore-module -v"]
      - id: pdoc3 # Auto-documentation in HTML format
        name: pdoc3
        language: system
        entry: sh
        args: [ "-c", "poetry run python3 -m pdoc --html -f grizzly_main -o auto_docs --skip-errors" ]